FROM debian:sid
MAINTAINER Yoshi Yamaguchi ymotongpoo@gmail.com

ARG PYTHON_VER=3.6.0
ENV JUPYTER_WORKDIR=jupyter
ENV JUPYTER_NOTEBOOK_PORT=8888
# add unstable package source list
RUN touch /etc/apt/source.list \
    && echo "deb http://ftp.jp.debian.org/debian unstable main contrib non-free" >> /etc/apt/source.list \
    && echo "deb-src  http://ftp.jp.debian.org/debian unstable main contrib non-free" >> /etc/apt/source.list
RUN apt-get update && apt-get upgrade -y
RUN apt-get install -y apt-utils
RUN apt-get install -y \
  apt-utils \
  build-essential \
  wget \
  bash \
  file \
  zlib1g-dev \
  bzip2 \
  libbz2-dev \
  libreadline6-dev \
  libsqlite3-0 \
  libmpdec2 \
  libmpdec-dev \
  libjpeg-dev \
  libjpeg62-turbo-dev \
  libjpeg-dev \
  libsqlite3-dev \
  libgdbm3 \
  libgdbm-dev \
  libssl1.1 \
  libssl-dev \
  tk8.6-dev \
  libtiff5 \
  libtiff5-dev \
  libwebp6 \
  libwebp-dev \
  liblapack3 \
  liblapack-dev \
  libatlas3-base \
  libatlas-dev

RUN mkdir -p /opt/python/${PYTHON_VER}
WORKDIR /opt/python/
RUN wget https://www.python.org/ftp/python/${PYTHON_VER}/Python-${PYTHON_VER}.tgz
RUN tar xzf Python-${PYTHON_VER}.tgz
WORKDIR /opt/python/Python-${PYTHON_VER}
# configure build option Python 3.6.0
RUN ./configure --prefix=/opt/python/${PYTHON_VER} \
                --with-threads \
                --with-computed-gotos \
                --enable-optimizations \
                --enable-ipv6 \
                --with-system-expat \
                --with-dbmliborder=gdbm:ndbm \
                --with-system-ffi \
                --with-system-libmpdec \
                --enable-loadable-sqlite-extensions
RUN make && make install
RUN make clean
WORKDIR /opt/python
RUN rm -rf Python-${PYTHON_VER} Python-${PYTHON_VER}.tgz
# nit setting
RUN useradd -s /bin/bash -d /home/py3 -m py3
USER py3
WORKDIR /home/py3
RUN touch /home/py3/.bashrc \
    && echo "export PATH=/opt/python/${PYTHON_VER}/bin:$PATH" >> /home/py3/.bashrc
# setting for venv
RUN /opt/python/${PYTHON_VER}/bin/python3 -E -m venv ${JUPYTER_WORKDIR}
WORKDIR /home/py3/${JUPYTER_WORKDIR}
ADD requirements.txt .
USER root
RUN chown py3 ./requirements.txt
USER py3
RUN . bin/activate \
    && pip3 install -r requirements.txt

WORKDIR /home/py3
ADD start-notebook.sh .
USER root
RUN chown py3 start-notebook.sh
USER py3
RUN chmod a+x start-notebook.sh

EXPOSE ${JUPYTER_NOTEBOOK_PORT}
ENTRYPOINT ["start-notebook.sh"]
 
 
